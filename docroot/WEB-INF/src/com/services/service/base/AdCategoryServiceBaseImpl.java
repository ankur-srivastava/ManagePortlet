/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.services.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import com.services.model.AdCategory;

import com.services.service.AdCategoryService;
import com.services.service.persistence.AdCategoryPersistence;
import com.services.service.persistence.AdCityPersistence;
import com.services.service.persistence.AdCountryPersistence;
import com.services.service.persistence.AdListingPersistence;
import com.services.service.persistence.AdResponseTrackerPersistence;
import com.services.service.persistence.AdStatsTrackerPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the ad category remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.services.service.impl.AdCategoryServiceImpl}.
 * </p>
 *
 * @author Ankur Srivastava
 * @see com.services.service.impl.AdCategoryServiceImpl
 * @see com.services.service.AdCategoryServiceUtil
 * @generated
 */
public abstract class AdCategoryServiceBaseImpl extends BaseServiceImpl
	implements AdCategoryService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.services.service.AdCategoryServiceUtil} to access the ad category remote service.
	 */

	/**
	 * Returns the ad category local service.
	 *
	 * @return the ad category local service
	 */
	public com.services.service.AdCategoryLocalService getAdCategoryLocalService() {
		return adCategoryLocalService;
	}

	/**
	 * Sets the ad category local service.
	 *
	 * @param adCategoryLocalService the ad category local service
	 */
	public void setAdCategoryLocalService(
		com.services.service.AdCategoryLocalService adCategoryLocalService) {
		this.adCategoryLocalService = adCategoryLocalService;
	}

	/**
	 * Returns the ad category remote service.
	 *
	 * @return the ad category remote service
	 */
	public com.services.service.AdCategoryService getAdCategoryService() {
		return adCategoryService;
	}

	/**
	 * Sets the ad category remote service.
	 *
	 * @param adCategoryService the ad category remote service
	 */
	public void setAdCategoryService(
		com.services.service.AdCategoryService adCategoryService) {
		this.adCategoryService = adCategoryService;
	}

	/**
	 * Returns the ad category persistence.
	 *
	 * @return the ad category persistence
	 */
	public AdCategoryPersistence getAdCategoryPersistence() {
		return adCategoryPersistence;
	}

	/**
	 * Sets the ad category persistence.
	 *
	 * @param adCategoryPersistence the ad category persistence
	 */
	public void setAdCategoryPersistence(
		AdCategoryPersistence adCategoryPersistence) {
		this.adCategoryPersistence = adCategoryPersistence;
	}

	/**
	 * Returns the ad city local service.
	 *
	 * @return the ad city local service
	 */
	public com.services.service.AdCityLocalService getAdCityLocalService() {
		return adCityLocalService;
	}

	/**
	 * Sets the ad city local service.
	 *
	 * @param adCityLocalService the ad city local service
	 */
	public void setAdCityLocalService(
		com.services.service.AdCityLocalService adCityLocalService) {
		this.adCityLocalService = adCityLocalService;
	}

	/**
	 * Returns the ad city persistence.
	 *
	 * @return the ad city persistence
	 */
	public AdCityPersistence getAdCityPersistence() {
		return adCityPersistence;
	}

	/**
	 * Sets the ad city persistence.
	 *
	 * @param adCityPersistence the ad city persistence
	 */
	public void setAdCityPersistence(AdCityPersistence adCityPersistence) {
		this.adCityPersistence = adCityPersistence;
	}

	/**
	 * Returns the ad country local service.
	 *
	 * @return the ad country local service
	 */
	public com.services.service.AdCountryLocalService getAdCountryLocalService() {
		return adCountryLocalService;
	}

	/**
	 * Sets the ad country local service.
	 *
	 * @param adCountryLocalService the ad country local service
	 */
	public void setAdCountryLocalService(
		com.services.service.AdCountryLocalService adCountryLocalService) {
		this.adCountryLocalService = adCountryLocalService;
	}

	/**
	 * Returns the ad country persistence.
	 *
	 * @return the ad country persistence
	 */
	public AdCountryPersistence getAdCountryPersistence() {
		return adCountryPersistence;
	}

	/**
	 * Sets the ad country persistence.
	 *
	 * @param adCountryPersistence the ad country persistence
	 */
	public void setAdCountryPersistence(
		AdCountryPersistence adCountryPersistence) {
		this.adCountryPersistence = adCountryPersistence;
	}

	/**
	 * Returns the ad listing local service.
	 *
	 * @return the ad listing local service
	 */
	public com.services.service.AdListingLocalService getAdListingLocalService() {
		return adListingLocalService;
	}

	/**
	 * Sets the ad listing local service.
	 *
	 * @param adListingLocalService the ad listing local service
	 */
	public void setAdListingLocalService(
		com.services.service.AdListingLocalService adListingLocalService) {
		this.adListingLocalService = adListingLocalService;
	}

	/**
	 * Returns the ad listing remote service.
	 *
	 * @return the ad listing remote service
	 */
	public com.services.service.AdListingService getAdListingService() {
		return adListingService;
	}

	/**
	 * Sets the ad listing remote service.
	 *
	 * @param adListingService the ad listing remote service
	 */
	public void setAdListingService(
		com.services.service.AdListingService adListingService) {
		this.adListingService = adListingService;
	}

	/**
	 * Returns the ad listing persistence.
	 *
	 * @return the ad listing persistence
	 */
	public AdListingPersistence getAdListingPersistence() {
		return adListingPersistence;
	}

	/**
	 * Sets the ad listing persistence.
	 *
	 * @param adListingPersistence the ad listing persistence
	 */
	public void setAdListingPersistence(
		AdListingPersistence adListingPersistence) {
		this.adListingPersistence = adListingPersistence;
	}

	/**
	 * Returns the ad response tracker local service.
	 *
	 * @return the ad response tracker local service
	 */
	public com.services.service.AdResponseTrackerLocalService getAdResponseTrackerLocalService() {
		return adResponseTrackerLocalService;
	}

	/**
	 * Sets the ad response tracker local service.
	 *
	 * @param adResponseTrackerLocalService the ad response tracker local service
	 */
	public void setAdResponseTrackerLocalService(
		com.services.service.AdResponseTrackerLocalService adResponseTrackerLocalService) {
		this.adResponseTrackerLocalService = adResponseTrackerLocalService;
	}

	/**
	 * Returns the ad response tracker persistence.
	 *
	 * @return the ad response tracker persistence
	 */
	public AdResponseTrackerPersistence getAdResponseTrackerPersistence() {
		return adResponseTrackerPersistence;
	}

	/**
	 * Sets the ad response tracker persistence.
	 *
	 * @param adResponseTrackerPersistence the ad response tracker persistence
	 */
	public void setAdResponseTrackerPersistence(
		AdResponseTrackerPersistence adResponseTrackerPersistence) {
		this.adResponseTrackerPersistence = adResponseTrackerPersistence;
	}

	/**
	 * Returns the ad stats tracker local service.
	 *
	 * @return the ad stats tracker local service
	 */
	public com.services.service.AdStatsTrackerLocalService getAdStatsTrackerLocalService() {
		return adStatsTrackerLocalService;
	}

	/**
	 * Sets the ad stats tracker local service.
	 *
	 * @param adStatsTrackerLocalService the ad stats tracker local service
	 */
	public void setAdStatsTrackerLocalService(
		com.services.service.AdStatsTrackerLocalService adStatsTrackerLocalService) {
		this.adStatsTrackerLocalService = adStatsTrackerLocalService;
	}

	/**
	 * Returns the ad stats tracker persistence.
	 *
	 * @return the ad stats tracker persistence
	 */
	public AdStatsTrackerPersistence getAdStatsTrackerPersistence() {
		return adStatsTrackerPersistence;
	}

	/**
	 * Sets the ad stats tracker persistence.
	 *
	 * @param adStatsTrackerPersistence the ad stats tracker persistence
	 */
	public void setAdStatsTrackerPersistence(
		AdStatsTrackerPersistence adStatsTrackerPersistence) {
		this.adStatsTrackerPersistence = adStatsTrackerPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return AdCategory.class;
	}

	protected String getModelClassName() {
		return AdCategory.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = adCategoryPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.services.service.AdCategoryLocalService.class)
	protected com.services.service.AdCategoryLocalService adCategoryLocalService;
	@BeanReference(type = com.services.service.AdCategoryService.class)
	protected com.services.service.AdCategoryService adCategoryService;
	@BeanReference(type = AdCategoryPersistence.class)
	protected AdCategoryPersistence adCategoryPersistence;
	@BeanReference(type = com.services.service.AdCityLocalService.class)
	protected com.services.service.AdCityLocalService adCityLocalService;
	@BeanReference(type = AdCityPersistence.class)
	protected AdCityPersistence adCityPersistence;
	@BeanReference(type = com.services.service.AdCountryLocalService.class)
	protected com.services.service.AdCountryLocalService adCountryLocalService;
	@BeanReference(type = AdCountryPersistence.class)
	protected AdCountryPersistence adCountryPersistence;
	@BeanReference(type = com.services.service.AdListingLocalService.class)
	protected com.services.service.AdListingLocalService adListingLocalService;
	@BeanReference(type = com.services.service.AdListingService.class)
	protected com.services.service.AdListingService adListingService;
	@BeanReference(type = AdListingPersistence.class)
	protected AdListingPersistence adListingPersistence;
	@BeanReference(type = com.services.service.AdResponseTrackerLocalService.class)
	protected com.services.service.AdResponseTrackerLocalService adResponseTrackerLocalService;
	@BeanReference(type = AdResponseTrackerPersistence.class)
	protected AdResponseTrackerPersistence adResponseTrackerPersistence;
	@BeanReference(type = com.services.service.AdStatsTrackerLocalService.class)
	protected com.services.service.AdStatsTrackerLocalService adStatsTrackerLocalService;
	@BeanReference(type = AdStatsTrackerPersistence.class)
	protected AdStatsTrackerPersistence adStatsTrackerPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private AdCategoryServiceClpInvoker _clpInvoker = new AdCategoryServiceClpInvoker();
}