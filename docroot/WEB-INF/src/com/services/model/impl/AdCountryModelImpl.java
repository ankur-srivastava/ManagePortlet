/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.services.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.services.model.AdCountry;
import com.services.model.AdCountryModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AdCountry service. Represents a row in the &quot;AL_AdCountry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.services.model.AdCountryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AdCountryImpl}.
 * </p>
 *
 * @author Ankur Srivastava
 * @see AdCountryImpl
 * @see com.services.model.AdCountry
 * @see com.services.model.AdCountryModel
 * @generated
 */
public class AdCountryModelImpl extends BaseModelImpl<AdCountry>
	implements AdCountryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ad country model instance should use the {@link com.services.model.AdCountry} interface instead.
	 */
	public static final String TABLE_NAME = "AL_AdCountry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "countryId", Types.BIGINT },
			{ "countryName", Types.VARCHAR },
			{ "countryStatus", Types.BOOLEAN },
			{ "createdDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table AL_AdCountry (countryId LONG not null primary key,countryName VARCHAR(75) null,countryStatus BOOLEAN,createdDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table AL_AdCountry";
	public static final String ORDER_BY_JPQL = " ORDER BY adCountry.countryName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY AL_AdCountry.countryName ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.services.model.AdCountry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.services.model.AdCountry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.services.model.AdCountry"),
			true);
	public static long COUNTRYSTATUS_COLUMN_BITMASK = 1L;
	public static long COUNTRYNAME_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.services.model.AdCountry"));

	public AdCountryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _countryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCountryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _countryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AdCountry.class;
	}

	@Override
	public String getModelClassName() {
		return AdCountry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("countryId", getCountryId());
		attributes.put("countryName", getCountryName());
		attributes.put("countryStatus", getCountryStatus());
		attributes.put("createdDate", getCreatedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long countryId = (Long)attributes.get("countryId");

		if (countryId != null) {
			setCountryId(countryId);
		}

		String countryName = (String)attributes.get("countryName");

		if (countryName != null) {
			setCountryName(countryName);
		}

		Boolean countryStatus = (Boolean)attributes.get("countryStatus");

		if (countryStatus != null) {
			setCountryStatus(countryStatus);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}
	}

	@Override
	public long getCountryId() {
		return _countryId;
	}

	@Override
	public void setCountryId(long countryId) {
		_countryId = countryId;
	}

	@Override
	public String getCountryName() {
		if (_countryName == null) {
			return StringPool.BLANK;
		}
		else {
			return _countryName;
		}
	}

	@Override
	public void setCountryName(String countryName) {
		_columnBitmask = -1L;

		_countryName = countryName;
	}

	@Override
	public boolean getCountryStatus() {
		return _countryStatus;
	}

	@Override
	public boolean isCountryStatus() {
		return _countryStatus;
	}

	@Override
	public void setCountryStatus(boolean countryStatus) {
		_columnBitmask |= COUNTRYSTATUS_COLUMN_BITMASK;

		if (!_setOriginalCountryStatus) {
			_setOriginalCountryStatus = true;

			_originalCountryStatus = _countryStatus;
		}

		_countryStatus = countryStatus;
	}

	public boolean getOriginalCountryStatus() {
		return _originalCountryStatus;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			AdCountry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AdCountry toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AdCountry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AdCountryImpl adCountryImpl = new AdCountryImpl();

		adCountryImpl.setCountryId(getCountryId());
		adCountryImpl.setCountryName(getCountryName());
		adCountryImpl.setCountryStatus(getCountryStatus());
		adCountryImpl.setCreatedDate(getCreatedDate());

		adCountryImpl.resetOriginalValues();

		return adCountryImpl;
	}

	@Override
	public int compareTo(AdCountry adCountry) {
		int value = 0;

		value = getCountryName().compareTo(adCountry.getCountryName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AdCountry)) {
			return false;
		}

		AdCountry adCountry = (AdCountry)obj;

		long primaryKey = adCountry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		AdCountryModelImpl adCountryModelImpl = this;

		adCountryModelImpl._originalCountryStatus = adCountryModelImpl._countryStatus;

		adCountryModelImpl._setOriginalCountryStatus = false;

		adCountryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AdCountry> toCacheModel() {
		AdCountryCacheModel adCountryCacheModel = new AdCountryCacheModel();

		adCountryCacheModel.countryId = getCountryId();

		adCountryCacheModel.countryName = getCountryName();

		String countryName = adCountryCacheModel.countryName;

		if ((countryName != null) && (countryName.length() == 0)) {
			adCountryCacheModel.countryName = null;
		}

		adCountryCacheModel.countryStatus = getCountryStatus();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			adCountryCacheModel.createdDate = createdDate.getTime();
		}
		else {
			adCountryCacheModel.createdDate = Long.MIN_VALUE;
		}

		return adCountryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{countryId=");
		sb.append(getCountryId());
		sb.append(", countryName=");
		sb.append(getCountryName());
		sb.append(", countryStatus=");
		sb.append(getCountryStatus());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.services.model.AdCountry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>countryId</column-name><column-value><![CDATA[");
		sb.append(getCountryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryName</column-name><column-value><![CDATA[");
		sb.append(getCountryName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryStatus</column-name><column-value><![CDATA[");
		sb.append(getCountryStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AdCountry.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			AdCountry.class
		};
	private long _countryId;
	private String _countryName;
	private boolean _countryStatus;
	private boolean _originalCountryStatus;
	private boolean _setOriginalCountryStatus;
	private Date _createdDate;
	private long _columnBitmask;
	private AdCountry _escapedModel;
}