/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.services.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.services.model.AdListing;
import com.services.model.AdListingModel;
import com.services.model.AdListingSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the AdListing service. Represents a row in the &quot;AL_AdListing&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.services.model.AdListingModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AdListingImpl}.
 * </p>
 *
 * @author Ankur Srivastava
 * @see AdListingImpl
 * @see com.services.model.AdListing
 * @see com.services.model.AdListingModel
 * @generated
 */
@JSON(strict = true)
public class AdListingModelImpl extends BaseModelImpl<AdListing>
	implements AdListingModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ad listing model instance should use the {@link com.services.model.AdListing} interface instead.
	 */
	public static final String TABLE_NAME = "AL_AdListing";
	public static final Object[][] TABLE_COLUMNS = {
			{ "adId", Types.BIGINT },
			{ "adTitle", Types.VARCHAR },
			{ "adDescription", Types.VARCHAR },
			{ "adCatId", Types.BIGINT },
			{ "adServiceType", Types.VARCHAR },
			{ "adCountryId", Types.BIGINT },
			{ "adCityId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "adUserName", Types.VARCHAR },
			{ "adUserEmail", Types.VARCHAR },
			{ "adUserPhone", Types.VARCHAR },
			{ "adStatus", Types.BOOLEAN },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table AL_AdListing (adId LONG not null primary key,adTitle VARCHAR(150) null,adDescription STRING null,adCatId LONG,adServiceType VARCHAR(75) null,adCountryId LONG,adCityId LONG,userId LONG,adUserName VARCHAR(75) null,adUserEmail VARCHAR(75) null,adUserPhone VARCHAR(75) null,adStatus BOOLEAN,createdDate DATE null,modifiedDate DATE null,companyId LONG,groupId LONG)";
	public static final String TABLE_SQL_DROP = "drop table AL_AdListing";
	public static final String ORDER_BY_JPQL = " ORDER BY adListing.adId DESC";
	public static final String ORDER_BY_SQL = " ORDER BY AL_AdListing.adId DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.services.model.AdListing"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.services.model.AdListing"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.services.model.AdListing"),
			true);
	public static long ADCATID_COLUMN_BITMASK = 1L;
	public static long ADCITYID_COLUMN_BITMASK = 2L;
	public static long ADSERVICETYPE_COLUMN_BITMASK = 4L;
	public static long COMPANYID_COLUMN_BITMASK = 8L;
	public static long GROUPID_COLUMN_BITMASK = 16L;
	public static long USERID_COLUMN_BITMASK = 32L;
	public static long ADID_COLUMN_BITMASK = 64L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AdListing toModel(AdListingSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		AdListing model = new AdListingImpl();

		model.setAdId(soapModel.getAdId());
		model.setAdTitle(soapModel.getAdTitle());
		model.setAdDescription(soapModel.getAdDescription());
		model.setAdCatId(soapModel.getAdCatId());
		model.setAdServiceType(soapModel.getAdServiceType());
		model.setAdCountryId(soapModel.getAdCountryId());
		model.setAdCityId(soapModel.getAdCityId());
		model.setUserId(soapModel.getUserId());
		model.setAdUserName(soapModel.getAdUserName());
		model.setAdUserEmail(soapModel.getAdUserEmail());
		model.setAdUserPhone(soapModel.getAdUserPhone());
		model.setAdStatus(soapModel.getAdStatus());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AdListing> toModels(AdListingSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<AdListing> models = new ArrayList<AdListing>(soapModels.length);

		for (AdListingSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.services.model.AdListing"));

	public AdListingModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _adId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAdId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _adId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AdListing.class;
	}

	@Override
	public String getModelClassName() {
		return AdListing.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("adId", getAdId());
		attributes.put("adTitle", getAdTitle());
		attributes.put("adDescription", getAdDescription());
		attributes.put("adCatId", getAdCatId());
		attributes.put("adServiceType", getAdServiceType());
		attributes.put("adCountryId", getAdCountryId());
		attributes.put("adCityId", getAdCityId());
		attributes.put("userId", getUserId());
		attributes.put("adUserName", getAdUserName());
		attributes.put("adUserEmail", getAdUserEmail());
		attributes.put("adUserPhone", getAdUserPhone());
		attributes.put("adStatus", getAdStatus());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long adId = (Long)attributes.get("adId");

		if (adId != null) {
			setAdId(adId);
		}

		String adTitle = (String)attributes.get("adTitle");

		if (adTitle != null) {
			setAdTitle(adTitle);
		}

		String adDescription = (String)attributes.get("adDescription");

		if (adDescription != null) {
			setAdDescription(adDescription);
		}

		Long adCatId = (Long)attributes.get("adCatId");

		if (adCatId != null) {
			setAdCatId(adCatId);
		}

		String adServiceType = (String)attributes.get("adServiceType");

		if (adServiceType != null) {
			setAdServiceType(adServiceType);
		}

		Long adCountryId = (Long)attributes.get("adCountryId");

		if (adCountryId != null) {
			setAdCountryId(adCountryId);
		}

		Long adCityId = (Long)attributes.get("adCityId");

		if (adCityId != null) {
			setAdCityId(adCityId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String adUserName = (String)attributes.get("adUserName");

		if (adUserName != null) {
			setAdUserName(adUserName);
		}

		String adUserEmail = (String)attributes.get("adUserEmail");

		if (adUserEmail != null) {
			setAdUserEmail(adUserEmail);
		}

		String adUserPhone = (String)attributes.get("adUserPhone");

		if (adUserPhone != null) {
			setAdUserPhone(adUserPhone);
		}

		Boolean adStatus = (Boolean)attributes.get("adStatus");

		if (adStatus != null) {
			setAdStatus(adStatus);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}
	}

	@JSON
	@Override
	public long getAdId() {
		return _adId;
	}

	@Override
	public void setAdId(long adId) {
		_columnBitmask = -1L;

		_adId = adId;
	}

	@JSON
	@Override
	public String getAdTitle() {
		if (_adTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _adTitle;
		}
	}

	@Override
	public void setAdTitle(String adTitle) {
		_adTitle = adTitle;
	}

	@JSON
	@Override
	public String getAdDescription() {
		if (_adDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _adDescription;
		}
	}

	@Override
	public void setAdDescription(String adDescription) {
		_adDescription = adDescription;
	}

	@JSON
	@Override
	public long getAdCatId() {
		return _adCatId;
	}

	@Override
	public void setAdCatId(long adCatId) {
		_columnBitmask |= ADCATID_COLUMN_BITMASK;

		if (!_setOriginalAdCatId) {
			_setOriginalAdCatId = true;

			_originalAdCatId = _adCatId;
		}

		_adCatId = adCatId;
	}

	public long getOriginalAdCatId() {
		return _originalAdCatId;
	}

	@JSON
	@Override
	public String getAdServiceType() {
		if (_adServiceType == null) {
			return StringPool.BLANK;
		}
		else {
			return _adServiceType;
		}
	}

	@Override
	public void setAdServiceType(String adServiceType) {
		_columnBitmask |= ADSERVICETYPE_COLUMN_BITMASK;

		if (_originalAdServiceType == null) {
			_originalAdServiceType = _adServiceType;
		}

		_adServiceType = adServiceType;
	}

	public String getOriginalAdServiceType() {
		return GetterUtil.getString(_originalAdServiceType);
	}

	@JSON
	@Override
	public long getAdCountryId() {
		return _adCountryId;
	}

	@Override
	public void setAdCountryId(long adCountryId) {
		_adCountryId = adCountryId;
	}

	@JSON
	@Override
	public long getAdCityId() {
		return _adCityId;
	}

	@Override
	public void setAdCityId(long adCityId) {
		_columnBitmask |= ADCITYID_COLUMN_BITMASK;

		if (!_setOriginalAdCityId) {
			_setOriginalAdCityId = true;

			_originalAdCityId = _adCityId;
		}

		_adCityId = adCityId;
	}

	public long getOriginalAdCityId() {
		return _originalAdCityId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public String getAdUserName() {
		if (_adUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _adUserName;
		}
	}

	@Override
	public void setAdUserName(String adUserName) {
		_adUserName = adUserName;
	}

	@JSON
	@Override
	public String getAdUserEmail() {
		if (_adUserEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _adUserEmail;
		}
	}

	@Override
	public void setAdUserEmail(String adUserEmail) {
		_adUserEmail = adUserEmail;
	}

	@JSON
	@Override
	public String getAdUserPhone() {
		if (_adUserPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _adUserPhone;
		}
	}

	@Override
	public void setAdUserPhone(String adUserPhone) {
		_adUserPhone = adUserPhone;
	}

	@JSON
	@Override
	public boolean getAdStatus() {
		return _adStatus;
	}

	@Override
	public boolean isAdStatus() {
		return _adStatus;
	}

	@Override
	public void setAdStatus(boolean adStatus) {
		_adStatus = adStatus;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			AdListing.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AdListing toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AdListing)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AdListingImpl adListingImpl = new AdListingImpl();

		adListingImpl.setAdId(getAdId());
		adListingImpl.setAdTitle(getAdTitle());
		adListingImpl.setAdDescription(getAdDescription());
		adListingImpl.setAdCatId(getAdCatId());
		adListingImpl.setAdServiceType(getAdServiceType());
		adListingImpl.setAdCountryId(getAdCountryId());
		adListingImpl.setAdCityId(getAdCityId());
		adListingImpl.setUserId(getUserId());
		adListingImpl.setAdUserName(getAdUserName());
		adListingImpl.setAdUserEmail(getAdUserEmail());
		adListingImpl.setAdUserPhone(getAdUserPhone());
		adListingImpl.setAdStatus(getAdStatus());
		adListingImpl.setCreatedDate(getCreatedDate());
		adListingImpl.setModifiedDate(getModifiedDate());
		adListingImpl.setCompanyId(getCompanyId());
		adListingImpl.setGroupId(getGroupId());

		adListingImpl.resetOriginalValues();

		return adListingImpl;
	}

	@Override
	public int compareTo(AdListing adListing) {
		int value = 0;

		if (getAdId() < adListing.getAdId()) {
			value = -1;
		}
		else if (getAdId() > adListing.getAdId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AdListing)) {
			return false;
		}

		AdListing adListing = (AdListing)obj;

		long primaryKey = adListing.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		AdListingModelImpl adListingModelImpl = this;

		adListingModelImpl._originalAdCatId = adListingModelImpl._adCatId;

		adListingModelImpl._setOriginalAdCatId = false;

		adListingModelImpl._originalAdServiceType = adListingModelImpl._adServiceType;

		adListingModelImpl._originalAdCityId = adListingModelImpl._adCityId;

		adListingModelImpl._setOriginalAdCityId = false;

		adListingModelImpl._originalUserId = adListingModelImpl._userId;

		adListingModelImpl._setOriginalUserId = false;

		adListingModelImpl._originalCompanyId = adListingModelImpl._companyId;

		adListingModelImpl._setOriginalCompanyId = false;

		adListingModelImpl._originalGroupId = adListingModelImpl._groupId;

		adListingModelImpl._setOriginalGroupId = false;

		adListingModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AdListing> toCacheModel() {
		AdListingCacheModel adListingCacheModel = new AdListingCacheModel();

		adListingCacheModel.adId = getAdId();

		adListingCacheModel.adTitle = getAdTitle();

		String adTitle = adListingCacheModel.adTitle;

		if ((adTitle != null) && (adTitle.length() == 0)) {
			adListingCacheModel.adTitle = null;
		}

		adListingCacheModel.adDescription = getAdDescription();

		String adDescription = adListingCacheModel.adDescription;

		if ((adDescription != null) && (adDescription.length() == 0)) {
			adListingCacheModel.adDescription = null;
		}

		adListingCacheModel.adCatId = getAdCatId();

		adListingCacheModel.adServiceType = getAdServiceType();

		String adServiceType = adListingCacheModel.adServiceType;

		if ((adServiceType != null) && (adServiceType.length() == 0)) {
			adListingCacheModel.adServiceType = null;
		}

		adListingCacheModel.adCountryId = getAdCountryId();

		adListingCacheModel.adCityId = getAdCityId();

		adListingCacheModel.userId = getUserId();

		adListingCacheModel.adUserName = getAdUserName();

		String adUserName = adListingCacheModel.adUserName;

		if ((adUserName != null) && (adUserName.length() == 0)) {
			adListingCacheModel.adUserName = null;
		}

		adListingCacheModel.adUserEmail = getAdUserEmail();

		String adUserEmail = adListingCacheModel.adUserEmail;

		if ((adUserEmail != null) && (adUserEmail.length() == 0)) {
			adListingCacheModel.adUserEmail = null;
		}

		adListingCacheModel.adUserPhone = getAdUserPhone();

		String adUserPhone = adListingCacheModel.adUserPhone;

		if ((adUserPhone != null) && (adUserPhone.length() == 0)) {
			adListingCacheModel.adUserPhone = null;
		}

		adListingCacheModel.adStatus = getAdStatus();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			adListingCacheModel.createdDate = createdDate.getTime();
		}
		else {
			adListingCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			adListingCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			adListingCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		adListingCacheModel.companyId = getCompanyId();

		adListingCacheModel.groupId = getGroupId();

		return adListingCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{adId=");
		sb.append(getAdId());
		sb.append(", adTitle=");
		sb.append(getAdTitle());
		sb.append(", adDescription=");
		sb.append(getAdDescription());
		sb.append(", adCatId=");
		sb.append(getAdCatId());
		sb.append(", adServiceType=");
		sb.append(getAdServiceType());
		sb.append(", adCountryId=");
		sb.append(getAdCountryId());
		sb.append(", adCityId=");
		sb.append(getAdCityId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", adUserName=");
		sb.append(getAdUserName());
		sb.append(", adUserEmail=");
		sb.append(getAdUserEmail());
		sb.append(", adUserPhone=");
		sb.append(getAdUserPhone());
		sb.append(", adStatus=");
		sb.append(getAdStatus());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.services.model.AdListing");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>adId</column-name><column-value><![CDATA[");
		sb.append(getAdId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adTitle</column-name><column-value><![CDATA[");
		sb.append(getAdTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adDescription</column-name><column-value><![CDATA[");
		sb.append(getAdDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adCatId</column-name><column-value><![CDATA[");
		sb.append(getAdCatId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adServiceType</column-name><column-value><![CDATA[");
		sb.append(getAdServiceType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adCountryId</column-name><column-value><![CDATA[");
		sb.append(getAdCountryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adCityId</column-name><column-value><![CDATA[");
		sb.append(getAdCityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adUserName</column-name><column-value><![CDATA[");
		sb.append(getAdUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adUserEmail</column-name><column-value><![CDATA[");
		sb.append(getAdUserEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adUserPhone</column-name><column-value><![CDATA[");
		sb.append(getAdUserPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adStatus</column-name><column-value><![CDATA[");
		sb.append(getAdStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AdListing.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			AdListing.class
		};
	private long _adId;
	private String _adTitle;
	private String _adDescription;
	private long _adCatId;
	private long _originalAdCatId;
	private boolean _setOriginalAdCatId;
	private String _adServiceType;
	private String _originalAdServiceType;
	private long _adCountryId;
	private long _adCityId;
	private long _originalAdCityId;
	private boolean _setOriginalAdCityId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _adUserName;
	private String _adUserEmail;
	private String _adUserPhone;
	private boolean _adStatus;
	private Date _createdDate;
	private Date _modifiedDate;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _columnBitmask;
	private AdListing _escapedModel;
}